input {
       tcp {
                port => 3515
                type =>"asmlogs"
        }
}

filter {
if [type] == "asmlogs" {
    mutate {
                gsub => ["message","\"",""]
                gsub => ["message","[\\]",""]
        }
        csv {
                separator => "#"
                columns => [
                        "header",
                        "geo_location",
                        "ip_address_intelligence",
                        "client_port",
                        "dest_ip",
                        "dest_port",
                        "protocol",
                        "method",
                        "uri",
                        "x_forwarded_for",
                        "request_status",
                        "support_id",
                        "session_id",
                        "username",
                        "violations",
                        "violation_rating",
                        "attack_type",
                        "query_string",
                        "policy_name",
                        "sig_ids",
                        "sig_names",
                        "sig_set_names",
                        "severity",
                        "request",
                        "violation_details"
                ]
        }
        grok {
               match => { "header" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} ASM:%{IP:client_ip}" }
        }
        geoip {
                source => "x_forwarded_for"
        }
        mutate {
                #remove_field => [ "message", "header" ]
                remove_field => [ "header" ]
        }
        mutate {
                gsub => ["sig_set_names", "},{", "}#{"]
                gsub => ["attack_type","[\\]",""]
        }
        mutate  {
                add_field => ["virtual", "%{policy_name}"]
        }
        split {
               field => "attack_type"
               terminator => ","
        }
        translate   {
              field => "attack_type"
              destination => "owasp"
              dictionary_path => '/etc/logstash/owasp.yaml'
        }
        date {
              match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
        }
    }
}

output {
if [type] == "asmlogs" {
        elasticsearch {
              hosts => ["0.0.0.0:9200"]
              index => "logstash-asm-index-%{+YYYY.MM.dd}"
              document_type => "asm-log"
              }
        }
}
